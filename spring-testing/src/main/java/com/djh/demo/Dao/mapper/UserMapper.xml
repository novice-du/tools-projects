<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.djh.demo.Dao.UserDao">
    <resultMap id="schoolResultMap" type="com.djh.demo.Entity.School">
        <!-- id:指定主键字段对应关系  column:列，数据库中的字段名称  property:属性，pojo的属性名称-->
        <result column="grade" property="nameOfGrade"/>
        <result column="class" property="nameOfClass"/>
        <result column="headmaster" property="headMaster"/>
        <!-- 指定对应的集合对象关系映射  property:将数据放入user对象中的userList中  ofType:指定ordersList属性的泛型类型 -->
        <!--association 表示一对一关系，collection表示一对多关系-->
        <collection property="userList" ofType="com.djh.demo.Entity.User" javaType="java.util.List">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
            <result column="grade" property="nameOfGrade"/>
            <result column="class" property="nameOfClass"/>
        </collection>
    </resultMap>
    <resultMap id="userResultMap" type="com.djh.demo.Entity.User">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="grade" property="nameOfGrade"/>
        <result column="class" property="nameOfClass"/>
    </resultMap>
    <sql id="selectPartStudent">id,grade,class</sql>
    <!--parameterType 入参类型   sql中用#{...}表达式读取方法中参数-->
    <!--禁止在insert，update，delete添加resultType属性-->
    <select id="findAll" resultMap="schoolResultMap">
        select
        a.name,a.grade,b.headmaster
        from
        t_student a
        left join t_gradeandclass b
        on a.grade = b.grade and a.class = b.class
        where a.grade = '一年级'
    </select>
    <select id="selectStudentByGradeAndClass" resultMap="userResultMap" parameterType="java.util.HashMap">
        select * from t_student
        <where>
            <if test="grade!=null">
                grade = #{grade}
            </if>
            <if test="nameOfClass!=null">
                and class = #{nameOfClass}
            </if>
        </where>
    </select>
    <!--item表示集合中每一个元素进行迭代时的别名，index指y定一个名字，用于表示在迭代过程中，每次迭代到的位置-->
    <select id="selectStudentById" resultMap="userResultMap" parameterType="List">
        select
        <include refid="selectPartStudent"></include>
        from t_student
        <where>
            id in
            <foreach collection="list" item="item" index="index" open="( " separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>
    <!--通过调用数据库中存储过程-->
    <delete id="deleteFromProcedure" parameterType="int" statementType="CALLABLE">
        call sp_delete_student(#{tid,mode=IN});
    </delete>

</mapper>